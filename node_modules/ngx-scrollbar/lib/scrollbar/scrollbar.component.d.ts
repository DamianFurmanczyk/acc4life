import { NgZone, ElementRef } from '@angular/core';
import { Platform } from '@angular/cdk/platform';
import { TrackXDirective, TrackYDirective } from './track/track.directive';
import { ThumbXDirective, ThumbYDirective } from './thumb/thumb.directive';
import { NgScrollbar } from '../ng-scrollbar';
import { Scrollbar } from './scrollbar';
import * as ɵngcc0 from '@angular/core';
export declare class ScrollbarY extends Scrollbar {
    cmp: NgScrollbar;
    protected platform: Platform;
    protected document: any;
    protected zone: NgZone;
    readonly track: TrackYDirective;
    readonly thumb: ThumbYDirective;
    protected get viewportScrollSize(): number;
    constructor(cmp: NgScrollbar, platform: Platform, document: any, zone: NgZone);
    protected setHovered(value: boolean): void;
    onUpdated(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ScrollbarY, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ScrollbarY, "scrollbar-y", never, {}, {}, never, never>;
}
export declare class ScrollbarX extends Scrollbar {
    private el;
    cmp: NgScrollbar;
    protected platform: Platform;
    protected document: any;
    protected zone: NgZone;
    readonly track: TrackXDirective;
    readonly thumb: ThumbXDirective;
    protected get viewportScrollSize(): number;
    get thickness(): number;
    constructor(el: ElementRef, cmp: NgScrollbar, platform: Platform, document: any, zone: NgZone);
    protected setHovered(value: boolean): void;
    onUpdated(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ScrollbarX, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ScrollbarX, "scrollbar-x", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsYmFyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzY3JvbGxiYXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdab25lLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQbGF0Zm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9wbGF0Zm9ybSc7XG5pbXBvcnQgeyBUcmFja1hEaXJlY3RpdmUsIFRyYWNrWURpcmVjdGl2ZSB9IGZyb20gJy4vdHJhY2svdHJhY2suZGlyZWN0aXZlJztcbmltcG9ydCB7IFRodW1iWERpcmVjdGl2ZSwgVGh1bWJZRGlyZWN0aXZlIH0gZnJvbSAnLi90aHVtYi90aHVtYi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTmdTY3JvbGxiYXIgfSBmcm9tICcuLi9uZy1zY3JvbGxiYXInO1xuaW1wb3J0IHsgU2Nyb2xsYmFyIH0gZnJvbSAnLi9zY3JvbGxiYXInO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2Nyb2xsYmFyWSBleHRlbmRzIFNjcm9sbGJhciB7XG4gICAgY21wOiBOZ1Njcm9sbGJhcjtcbiAgICBwcm90ZWN0ZWQgcGxhdGZvcm06IFBsYXRmb3JtO1xuICAgIHByb3RlY3RlZCBkb2N1bWVudDogYW55O1xuICAgIHByb3RlY3RlZCB6b25lOiBOZ1pvbmU7XG4gICAgcmVhZG9ubHkgdHJhY2s6IFRyYWNrWURpcmVjdGl2ZTtcbiAgICByZWFkb25seSB0aHVtYjogVGh1bWJZRGlyZWN0aXZlO1xuICAgIHByb3RlY3RlZCBnZXQgdmlld3BvcnRTY3JvbGxTaXplKCk6IG51bWJlcjtcbiAgICBjb25zdHJ1Y3RvcihjbXA6IE5nU2Nyb2xsYmFyLCBwbGF0Zm9ybTogUGxhdGZvcm0sIGRvY3VtZW50OiBhbnksIHpvbmU6IE5nWm9uZSk7XG4gICAgcHJvdGVjdGVkIHNldEhvdmVyZWQodmFsdWU6IGJvb2xlYW4pOiB2b2lkO1xuICAgIG9uVXBkYXRlZCgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2Nyb2xsYmFyWCBleHRlbmRzIFNjcm9sbGJhciB7XG4gICAgcHJpdmF0ZSBlbDtcbiAgICBjbXA6IE5nU2Nyb2xsYmFyO1xuICAgIHByb3RlY3RlZCBwbGF0Zm9ybTogUGxhdGZvcm07XG4gICAgcHJvdGVjdGVkIGRvY3VtZW50OiBhbnk7XG4gICAgcHJvdGVjdGVkIHpvbmU6IE5nWm9uZTtcbiAgICByZWFkb25seSB0cmFjazogVHJhY2tYRGlyZWN0aXZlO1xuICAgIHJlYWRvbmx5IHRodW1iOiBUaHVtYlhEaXJlY3RpdmU7XG4gICAgcHJvdGVjdGVkIGdldCB2aWV3cG9ydFNjcm9sbFNpemUoKTogbnVtYmVyO1xuICAgIGdldCB0aGlja25lc3MoKTogbnVtYmVyO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCBjbXA6IE5nU2Nyb2xsYmFyLCBwbGF0Zm9ybTogUGxhdGZvcm0sIGRvY3VtZW50OiBhbnksIHpvbmU6IE5nWm9uZSk7XG4gICAgcHJvdGVjdGVkIHNldEhvdmVyZWQodmFsdWU6IGJvb2xlYW4pOiB2b2lkO1xuICAgIG9uVXBkYXRlZCgpOiB2b2lkO1xufVxuIl19